@import url("https://fonts.googleapis.com/css2?family=Pacifico&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Pacifico&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap");
html {
  scrollbar-width: none;
}

body {
  margin: 0 auto;
}

::-webkit-scrollbar {
  width: 0px;
}

* {
  box-sizing: border-box;
}

/* let's try putting a grid on 'body' and positioningeverything ver that *

/* maybe later, first let's do header approach */
/* will need to adjust header /nav stuff to be able to ahve a sticky nav */
aside {
  grid-area: aside;
  background-color: white;
  /*#FFFCE8;*/
  width: 3rem;
  margin-right: 2rem;
  height: 100%;
  z-index: 11;
}

.social-links {
  margin-top: 1rem;
  width: 3rem;
  display: grid;
  grid-template-rows: 3rem 3rem 3rem;
  place-items: center;
  position: sticky;
  top: 1rem;
  right: 0;
  z-index: 12;
}

.content-wrap {
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 3rem;
  grid-template-areas: "nav aside" "header aside" "main aside";
  place-items: center;
  background-color: #010228;
}
.content-wrap nav {
  grid-area: nav;
  grid-column-end: 3;
  background-color: #647790;
  margin-top: 1rem;
  width: 100%;
  height: 3em;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  place-items: center;
  position: sticky;
  top: 1rem;
  z-index: 10;
}
.content-wrap nav a {
  color: #010228;
}
.content-wrap header {
  color: #08d993;
  grid-area: header;
  width: 90%;
  height: 100vh;
}
.content-wrap header h1 {
  margin: 2rem 0 0 2rem;
}
.content-wrap header h1 + p {
  width: 85%;
  margin: 0 0 1rem 3rem;
  font-size: 2.5rem;
  opacity: 0.8;
  font-family: "Pacifico", cursive;
  letter-spacing: 0.1em;
  color: #FFFCE8;
  font-family: "Lato", sans-serif;
}
.content-wrap main {
  grid-column: 1/2;
  display: grid;
  width: 90%;
  place-items: center;
}
.content-wrap main section.main-info {
  width: 95%;
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  place-items: center;
}
.content-wrap main section.main-info h2 {
  justify-self: start;
}
.content-wrap main section.main-info ul li {
  list-style-type: square;
}
.content-wrap main section.main-info #list-one {
  grid-row: 1/2;
  grid-column: 3/7;
  margin-bottom: 1rem;
}
.content-wrap main section.main-info #img-one {
  grid-row: 1/2;
  grid-column: 1/3;
  width: 10rem;
  justify-self: end;
}
.content-wrap main section.main-info #list-two {
  grid-row: 2/3;
  grid-column: 1/5;
  margin-top: 1rem;
}
.content-wrap main section.main-info #img-two {
  grid-row: 2/3;
  grid-column: 5/7;
}
.content-wrap main section.text {
  display: grid;
  justify-items: center;
  margin: 1rem;
  text-align: justify;
}
.content-wrap main section.text .paragraphs {
  width: 80%;
  margin-bottom: 3rem;
}

/* STYLES */
h1 {
  font-size: 5rem;
  font-family: "Pacifico", cursive;
  letter-spacing: 0.15em;
}

h2 {
  font-size: 2.5rem;
  opacity: 0.8;
  font-family: "Pacifico", cursive;
  letter-spacing: 0.1em;
  color: #FFFCE8;
}

p, li {
  font-family: "Lato", sans-serif;
}

li {
  font-size: 0.9rem;
}

nav a {
  font-family: "Lato", sans-serif;
  text-transform: uppercase;
  text-decoration: none;
}

.paragraphs span {
  font-family: "Pacifico", cursive;
  font-size: 1.3rem;
  letter-spacing: 0.3rem;
  opacity: 0.8;
}

/* thought process: nav - only one row so no need to specify
I found a best practices guide in smashing magazine that suggested using the above minmax
pattern with fr to force equal distribution
*/

/*# sourceMappingURL=main.css.map */
