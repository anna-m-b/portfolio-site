@import 'style-vars.scss';
@import 'mixins.scss';

html {
  scrollbar-width: none; //for firefox
}

body {
  margin: 0 auto;
  
  // color: #058a5e;
  // color: #FF1654;
  // color: #D64933;
 
}

::-webkit-scrollbar {
  width: 0px;
}

* { 
  box-sizing: border-box;
}




// nav {
//   grid-column: 1 / 4;
// }
/* let's try putting a grid on 'body' and positioningeverything ver that *

/* maybe later, first let's do header approach */

/* will need to adjust header /nav stuff to be able to ahve a sticky nav */
// header {
//   width: 100%;
//   display: grid;
//   grid-template: 1fr 1fr 1fr /  1fr 0.3fr 10%;
aside {
  grid-area: aside;
  background-color: white; /*#FFFCE8;*/
  width: 3rem;
  margin-right: 2rem;
  height: 100%;
  z-index: 11;
  // grid-column: 2/3;
}
.social-links {
 margin-top: 1rem; 
  width: 3rem;
  // background-color: #435060
  // height: 100vh;
  // grid-area: aside;
  display: grid;
  grid-template-rows: 3rem 3rem 3rem;
  place-items: center;
  position: sticky;
  top: 1rem;
  right: 0;
  z-index: 12;
}
   

.content-wrap {
  width: 100%;
  display: grid;
  grid-template-columns: 1fr 3rem;
  grid-template-areas: 
    "nav aside"
    "header aside"
    "main aside";

  place-items: center;
  // grid-gap: 2em;
  background-color: #010228;
  // background-color: #02033C;
  
//   display: grid;
//   grid-template-areas: 
//       "nav nav nav aside"
//       "header header header aside"
//       "main main main aside"
// }



  nav {
    grid-area: nav;
    grid-column-end: 3;
    background-color: #647790;
    // background-color: #6f829b;
    // background-color: #FF1654;
    margin-top: 1rem;
    // border-bottom: 1px solid black;
    width: 100%;
    height: 3em;
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    place-items: center;
    position: sticky;
    top: 1rem;
    z-index: 10;

    a {
      color: #010228;
    }
  }

  header {
    color: #08d993;
    // color: #06B178;
    // color: #00FF66;
    // // color: #33FF00;
    // color: #33FF33;
    grid-area: header;
    width: 90%;
    height: 100vh;
  
     h1 {
         margin: 2rem 0 0 2rem;

    + p {
        width: 85%;
        margin: 0 0 1rem 3rem;
        @include subheading-styles;
        font-family: $paragraph-font;
     }
    }
  }
 


main {
  grid-column: 1 / 2;
  display: grid;
  width: 90%;
  place-items: center;
  // background-color: #0096c7;
  

  section.main-info {

    width: 95%;
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    place-items: center;

    h2 {
      justify-self: start;
    }

    ul li {
      list-style-type: square;
    }
    

    #list-one {
      grid-row: 1 / 2;
      grid-column: 3 / 7;
      // justify-self: start;
      margin-bottom: 1rem;
    }
    #img-one {
      grid-row: 1 / 2;
      grid-column: 1 / 3;
      width: 10rem;
      justify-self: end;
    }
  
    #list-two {
       grid-row: 2 / 3;
       grid-column: 1 / 5;
      //  justify-self: end;
       margin-top: 1rem;
     
    }

    #img-two {
      grid-row: 2 / 3;
      grid-column: 5 / 7;

    }
  }

  section.text {
      display: grid;
      justify-items: center;
      margin: 1rem;
      text-align: justify;

      .paragraphs {
        width: 80%;
        margin-bottom: 3rem;
      }
  }

 }

}

/* STYLES */

h1 {
  @include h1-styles;
}

h2 {
  @include subheading-styles;
}

p, li {
  font-family: $paragraph-font;
}

li {
  font-size: 0.9rem;
}


nav a {
  font-family: $paragraph-font;
  text-transform: uppercase;
  text-decoration: none;
}

.paragraphs span {
  font-family: $title-font;
  font-size: 1.3rem;
  letter-spacing: 0.3rem;
  opacity: 0.8;
}

// p, li {
//   color: #FFFCE8;
// }

/* thought process: nav - only one row so no need to specify
I found a best practices guide in smashing magazine that suggested using the above minmax
pattern with fr to force equal distribution
*/



// nav {
//   display: grid;
//   grid-template: 1fr 1fr / repeat(5, 1fr) repeat(4, 0.5fr);
//   place-items: center;
  
// }

// .social-links {
//   width: 95%;
//   grid-column: -1 / -2;
//   display: grid;
//   grid-template-columns: 1fr 1fr;
//   // justify-items: center;
//   // align-items: end; 
//   place-items: center; /* why doesn't this (and other align attempts) work?"*/

//   a {
//        padding-top: 10%; /* fix for above problem (align not working) */
//   }
// }




